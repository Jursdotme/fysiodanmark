.medarbejder {
	@include media($md-up) {
		@include span-columns(3);
		@include omega(4n);
	}
	@include media($sm) {
		@include span-columns(4);
		@include omega(3n);
	}
	@include media($xs) {
		@include span-columns(12);
		@include omega();
	}
	background-color: #ECECEC;
	margin-bottom: $gutter;
}

.portrait {
	background-color: #fff;
	img {
		width: 100%;
    height: auto;
    display: block;
    // max-width: 130px;
    margin: 0 auto;
    // border-radius: 50%;
	}
}

.caption   {
	padding: 15px;
	h3 {
		font-size: 1.2em;
	}
}

.titel {
	font-size: .75em;
	line-height: 1.2;
	margin: 0;
	padding: 0;
	font-weight: 700;
	text-transform: uppercase;
	margin-top: 10px;
}

/* Morph Button: Default Styles */

.morph-button {
	position: relative;
	display: block;
	// margin: 0 auto;
  margin: 0 auto $gutter/2;
}

.morph-button > button {
	position: relative;
	padding: 0;
	border: none;
	background-color: $brand-color-1;
	color: #fff;
	line-height: 1;
	overflow: hidden;
	font-size: .8em;
	text-transform: uppercase;
}

.morph-button.open > button {
	pointer-events: none;
}

.morph-content {
	pointer-events: none;
}

.morph-button.open .morph-content {
	pointer-events: auto;
}

/* Common styles for overlay and modal type (fixed morph) */
.morph-button-fixed,
.morph-button-fixed .morph-content {
	width: 96px;
	height: 24px;

}

.morph-button-fixed > button {
	z-index: 1000;
	width: 100%;
	height: 100%;
	transition: opacity 0.1s 0.5s;
	border-radius: 2px;
}

.morph-button-fixed.open > button {
	opacity: 0;
	transition: opacity 0.1s;
}

.morph-button-fixed .morph-content {
	position: fixed;
	z-index: 900;
	opacity: 0;
	transition: opacity 0.3s 0.5s, width 0.4s 0.1s, height 0.4s 0.1s, top 0.4s 0.1s, left 0.4s 0.1s, margin 0.4s 0.1s;
}

.morph-button-fixed.open .morph-content {
	opacity: 1;
}

.morph-button-fixed .morph-content > div {
	visibility: hidden;
	height: 0;
	opacity: 0;
	transition: opacity 0.1s, visibility 0s 0.1s, height 0s 0.1s;
}

.morph-button-fixed.open .morph-content > div {
	visibility: visible;
	height: auto;
	opacity: 1;
	transition: opacity 0.3s 0.5s;
}

.morph-button-fixed.active > button {
	z-index: 2000;
}

.morph-button-fixed.active .morph-content {
	z-index: 1900;
}

/* Transitions for overlay button and sidebar button */
.morph-button-overlay .morph-content,
.morph-button-sidebar .morph-content {
	transition: opacity 0.3s 0.5s, width 0.4s 0.1s, height 0.4s 0.1s, top 0.4s 0.1s, left 0.4s 0.1s;
}

.morph-button-overlay.open .morph-content,
.morph-button-sidebar.open .morph-content {
	transition: width 0.4s 0.1s, height 0.4s 0.1s, top 0.4s 0.1s, left 0.4s 0.1s;
}

/* Morph Button Style: Overlay */
.morph-button-overlay .morph-content {
	overflow: hidden;
	background: #fafafa;
}

.morph-button-overlay.open .morph-content {
	top: 0 !important;
	left: 0 !important;
	width: 100%;
	height: 100%;
}

/* Let's add some nice easing for all cases */
.morph-button .morph-content,
.morph-button.open .morph-content,
.morph-button-modal-4 .morph-clone {
	transition-timing-function: cubic-bezier(0.7,0,0.3,1);
}

/* Helper classes */
.noscroll {
	overflow: hidden;
}

.morph-button-overlay.scroll .morph-content {
	overflow-y: scroll;
}

.morph-button-sidebar.scroll .morph-content {
	overflow: auto;
}

/* No JS fallback: let's hide the button and show the content */
.no-js .morph-button > button {
	display: none;
}

.no-js .morph-button {
	margin: 10px 0;
	float: none;
}

.no-js .morph-button,
.no-js .morph-button .morph-content,
.no-js .morph-button .morph-content > div {
	position: relative;
	width: auto;
	height: auto;
	opacity: 1;
	visibility: visible;
	top: auto;
	left: auto;
	transform: none;
	pointer-events: auto;
}

.no-js .morph-button .morph-content .icon-close {
	display: none;
}

.no-transition {
	transition: none !important;
}

/* Media Queries */

@media screen and (max-width: 600px) {
	.morph-button-modal.open .morph-content {
		top: 0% !important;
		left: 0% !important;
		margin: 0;
		width: 100%;
		height: 100%;
		overflow-y: scroll;
		transition: width 0.4s 0.1s, height 0.4s 0.1s, top 0.4s 0.1s, left 0.4s 0.1s;
	}
}

/* Icons */
.icon-close {
	z-index: 100;
	display: block;
	overflow: hidden;
  width: 2em;
  height: 2em;
	text-align: center;
	line-height: 3;
	cursor: pointer;
  color: $brand-color-1;
}

.icon:before {
	position: relative;
	display: block;
	width: 100%;
	height: 100%;
	text-transform: none;
	font-weight: normal;
	font-style: normal;
	font-variant: normal;
	speak: none;
	-moz-osx-font-smoothing: grayscale;
}

.icon-close::before {
	content: "\002715";
}

.icon-close {
	position: absolute;
	top: 20px;
	right: 20px;
}

.icon-close:hover {
	color: $brand-color-1;
}

/* Styles for dummy content */

/* Style for overlay */

.content-style-overlay {
	padding: 100px 50px;
  .image img {
    margin: 0 auto;
    border-radius: 50%;
    width: 140px;
		@include shadow-2dp();
  }

	> h2,
	> p {
		text-align: center;
		margin: 0;
	}

	> p {
		text-align: center;
		margin-bottom: $gutter;
	}
}

.content-style-overlay > h2 {
	margin: 0;
	padding: 0;
	font-weight: 300;
	font-size: 3em;
}

.biography {
	max-width: 700px;
	margin: 0 auto;
}

.content-style-overlay .icon-close {
  border: 2px solid $brand-color-1;
  border-radius: 50%;
  line-height: 1.9em;
  font-size: 22px;
}

.content-style-overlay .icon-close:hover {
	border-color: $brand-color-1;
}

@media screen and (max-width: 770px) {
	.content-style-overlay {
		font-size: 75%;
	}

	.content-style-overlay .icon-close {
		top: 5px;
		right: 5px;
	}
}
